[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-helper-agent"
version = "2.0.1"
description = "Interactive AI Helper Agent for code assistance, analysis, and bug fixing with internet access"
readme = "README.md"
license = "MIT"
authors = [
    {name = "AIStudent", email = "aistudentlearn4@gmail.com"}
]
maintainers = [
    {name = "AIMLDev726", email = "aistudentlearn4@gmail.com"}
]
keywords = ["ai", "assistant", "code-analysis", "bug-fixing", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent"
]
requires-python = ">=3.8"
dependencies = [
    "langchain-groq>=0.1.0",
    "langchain-anthropic>=0.1.0",
    "langchain-google-genai>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-ollama>=0.1.0",
    "langchain>=0.1.0",
    "langchain-community>=0.1.0",
    "langchain-core>=0.1.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "pathlib2; python_version<'3.4'",
    "faiss-cpu>=1.7.0",
    "chromadb>=0.4.0",
    "cryptography>=3.4.0",
    "sqlalchemy>=1.4.0",
    "requests>=2.25.0",
    "beautifulsoup4>=4.9.0",
    "duckduckgo-search>=3.0.0",
    "googlesearch-python>=1.2.0"
]

[project.scripts]
# ===== MAIN CLI SELECTOR =====
ai-helper-selector = "ai_helper_agent.cli.cli_selector:main"
ai-chat-selector = "ai_helper_agent.cli.cli_selector:main"
ai-menu = "ai_helper_agent.cli.cli_selector:main"

# ===== API KEY & SECURITY MANAGEMENT =====
ai-setup-keys = "ai_helper_agent.utilities.api_key_setup:main"
ai-keys = "ai_helper_agent.utilities.api_key_setup:main"
ai-security = "ai_helper_agent.utilities.api_key_setup:main"

# ===== SYSTEM TOOLS & UTILITIES =====
ai-core = "ai_helper_agent.core.core:main"
ai-browser = "ai_helper_agent.utils.browser_integration:main"
ai-mcp = "ai_helper_agent.utils.mcp_integration:main"
ai-tools = "ai_helper_agent.core.core:main"

# ===== DEVELOPMENT TOOLS =====
ai-launcher = "ai_helper_agent.cli.cli_selector:main"
ai-run = "ai_helper_agent.cli.cli_selector:main"

# ===== USER-FRIENDLY CLI NAMES =====
# Most Powerful - G4F + Groq + Internet (Flagship)
ai-super-chat = "ai_helper_agent.cli.enhanced_internet_cli:main"
ai-smart = "ai_helper_agent.cli.enhanced_internet_cli:main"
ai-genius = "ai_helper_agent.cli.enhanced_internet_cli:main"

# Fast Single Provider - Groq Only
ai-fast-chat = "ai_helper_agent.cli.cli_single:main"
ai-quick = "ai_helper_agent.cli.cli_single:main"
ai-turbo = "ai_helper_agent.cli.cli_single:main"

# Internet Search - Groq + Web
ai-web-chat = "ai_helper_agent.cli.cli_internet_single:main"
ai-search = "ai_helper_agent.cli.cli_internet_single:main"
ai-internet = "ai_helper_agent.cli.cli_internet_single:main"

# Multi-Provider - Choose Any AI
ai-smart-chat = "ai_helper_agent.cli.multi_provider_cli:main"
ai-multi = "ai_helper_agent.cli.multi_provider_cli:main"
ai-pro = "ai_helper_agent.cli.multi_provider_cli:main"

# Advanced Features - File Processing + Multi-Provider
ai-advanced = "ai_helper_agent.cli.enhanced_cli:main"
ai-dev = "ai_helper_agent.cli.enhanced_cli:main"
ai-expert = "ai_helper_agent.cli.enhanced_cli:main"

# ===== TECHNICAL NAMES (Legacy) =====
# Multi-provider CLI (default)
ai-helper = "ai_helper_agent.cli.multi_provider_cli:main"
ai-helper-multi = "ai_helper_agent.cli.multi_provider_cli:main"
ai-helper-agent = "ai_helper_agent.cli.multi_provider_cli:main"

# Single provider CLI (Groq only)
ai-helper-single = "ai_helper_agent.cli.cli_single:main"
ai-helper-groq = "ai_helper_agent.cli.cli_single:main"

# Internet-enabled single provider CLI (Groq + Web Search)
ai-helper-internet = "ai_helper_agent.cli.cli_internet_single:main"
ai-helper-web = "ai_helper_agent.cli.cli_internet_single:main"

# Enhanced CLIs
ai-helper-enhanced = "ai_helper_agent.cli.enhanced_cli:main"
ai-helper-enhanced-internet = "ai_helper_agent.cli.enhanced_internet_cli:main"

# Legacy compatibility
ai_helper_agent = "ai_helper_agent.cli.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "pre-commit"
]
test = [
    "pytest>=6.0",
    "pytest-cov"
]

[project.urls]
Homepage = "https://github.com/AIMLDev726/ai-helper-agent"
Documentation = "https://github.com/AIMLDev726/ai-helper-agent#readme"
Repository = "https://github.com/AIMLDev726/ai-helper-agent"
"Bug Tracker" = "https://github.com/AIMLDev726/ai-helper-agent/issues"
Changelog = "https://github.com/AIMLDev726/ai-helper-agent/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["ai_helper_agent*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
ai_helper_agent = ["*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--cov=ai_helper_agent --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true